import { FILTER_BY_FORMULA } from './airtable.constants';
import { IOffers } from './types/IOffer.interface';

export const getFilterById = (keyIds: string[]) => {
  return keyIds.length === 1
    ? `&${FILTER_BY_FORMULA}=FIND("${keyIds[0]}",{Id})`
    : `&${FILTER_BY_FORMULA}=OR(${keyIds.map((x) => `{Id}="${x}"`).join(',')})`;
};

/**
 * –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–¥–∞—á —Å –ø–æ–ª–µ–º —Å—Å—ã–ª–∫–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
 */
export const getOffersLink = (offers: IOffers) => {
  try {
    if (offers && offers.records && Array.isArray(offers.records)) {
      const result = offers?.records
        .filter(
          (x) => x.fields['Name'] !== undefined && x.fields['Name'] !== '',
        )
        .map((x) => ({
          name: x.fields['Name'],
          link: x.fields['–°—Å—ã–ª–∫–∞'],
        }));
      return result.reduce((acc, currentValue, index) => {
        acc += `${++index}. <a href='${currentValue.link}'>${currentValue.name}</a>\n`;
        return acc;
      }, '');
    }
    return '–ü–æ–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Çüò¢';
  } catch (e) {
    console.log(e);
    return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–∑–∂–µ.';
  }
};
/**
 * –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–¥–∞—á —Å –ø–æ–ª–µ–º —Å—Å—ã–ª–∫–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
 */
export const getOffersLinkForNotification = (
  offers: IOffers,
  onlyCurrent?: string,
) => {
  try {
    const result = offers?.records
      .filter((x) =>
        onlyCurrent
          ? x.fields['Name'] === onlyCurrent
          : x.fields['Name'] !== undefined && x.fields['Name'] !== '',
      )
      .map((x) => ({
        name:
          x.fields['Name'] +
          (x.fields['–ö–µ—à–±—ç–∫'] && x.fields['–ö–µ—à–±—ç–∫'] !== undefined
            ? ' (üí∞üí∞üí∞ –∫—ç—à–±—ç–∫ üëâ' + x.fields['–ö–µ—à–±—ç–∫'] + ')'
            : ''),
        link: x.fields['–°—Å—ã–ª–∫–∞'],
      }));
    return result.reduce((acc, currentValue) => {
      if (onlyCurrent) {
        return `\n\nüòâ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –£ –Ω–∞—Å –Ω–æ–≤–∞—è —Ä–∞–∑–¥–∞—á–∞ <a href='${currentValue.link}'>${currentValue.name}</a>`;
      }
      acc += `üòâ <a href='${currentValue.link}'>${currentValue.name}</a>\n`;
      return acc;
    }, '');
  } catch (e) {
    console.log(e);
    return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–∑–∂–µ.';
  }
};
